<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Controls="clr-namespace:MshaControls.HamburgerMenu"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        >
  
  <Design.PreviewWith >
    <Border>
      <Grid Background="White" Height="500" Width="600">
        <Controls:HamburgerMenu />
      </Grid>
    </Border>
  </Design.PreviewWith>
  
  <Style Selector="ToggleButton.HamburgerMenu">
    <!--Do not set is checked otherwise app is crashing (?)-->
    <!--<Setter Property="IsChecked" Value="False"/>-->
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid x:Name="mainGrid">
            <Border x:Name="contentBorder" BorderThickness="1" Margin="3">
              <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
              />
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style Selector="ToggleButton.HamburgerMenu:checked /template/ ContentPresenter">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
  </Style>

  <Style Selector="ToggleButton.HamburgerMenu:pressed  /template/ ContentPresenter">
    <Setter Property="Background" Value="Transparent"/>
  </Style>

  <Style Selector="ToggleButton.HamburgerMenu:pointerover  /template/ Border#contentBorder">
    <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:HamburgerMenu}}, Path=SelectionIndicatorColor, Mode=OneWay}"/>
  </Style>
  
  <Style Selector="ListBox.HamburgerMenu">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <ScrollViewer>
            <ItemsPresenter Margin="0"
                            Items="{TemplateBinding Items}"
                            ItemsPanel="{TemplateBinding ItemsPanel}"
                            ItemTemplate="{TemplateBinding ItemTemplate}"
            />
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Styles.Resources>
    <sys:Double x:Key="MinimizedSize">40</sys:Double>
    <sys:Double x:Key="MaximizedSize">250</sys:Double>
  </Styles.Resources>

  <Style Selector="Controls|HamburgerMenu">
    <Setter Property="Background" Value="Red"/>
    <Setter Property="MenuIconColor" Value="White"/>
    <Setter Property="SelectionIndicatorColor" Value="Transparent"/>
    <Setter Property="Width" Value="{TemplateBinding MinimizedSize}"/>
    <Setter Property="IsVisible" Value="True"/>
    <Setter Property="IsOpen" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid x:Name="mainGrid" Background="{TemplateBinding Background}">
            
           
            <ToggleButton Classes="HamburgerMenu" x:Name="menuIcon"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          HorizontalContentAlignment="Center"
                          Height="40"
                          Width="40"
                          IsChecked="{TemplateBinding IsOpen, Mode=TwoWay}">
              
              
              <Viewbox Width="25" Height="25">
                <Image>
                  <Image.Source>
                    <DrawingImage>
                      <DrawingImage.Drawing>
                        <DrawingGroup ClipGeometry="M0,0 V512 H448 V0 H0 Z">
                          <GeometryDrawing Brush="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:HamburgerMenu}}, Path=MenuIconColor}" Geometry="F1 M448,512z M0,0z M0,96C0,78.33,14.33,64,32,64L416,64C433.7,64 448,78.33 448,96 448,113.7 433.7,128 416,128L32,128C14.33,128,0,113.7,0,96z M0,256C0,238.3,14.33,224,32,224L416,224C433.7,224 448,238.3 448,256 448,273.7 433.7,288 416,288L32,288C14.33,288,0,273.7,0,256z M416,448L32,448C14.33,448 0,433.7 0,416 0,398.3 14.33,384 32,384L416,384C433.7,384 448,398.3 448,416 448,433.7 433.7,448 416,448z" />
                        </DrawingGroup>
                      </DrawingImage.Drawing>
                    </DrawingImage>
                  </Image.Source>
                </Image>
              </Viewbox>
              
            </ToggleButton>
            
            <ListBox Classes="HamburgerMenu"
                     x:Name="contentList"
                     Items="{TemplateBinding Content}"
                     HorizontalAlignment="Left" Margin="0,40,0,0"
                     VerticalAlignment="Top"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     SelectedIndex="{TemplateBinding SelectedIndex}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style Selector="Controls|HamburgerMenu[IsOpen=true]">
    <Style.Animations>
      <Animation Duration="0:0:0.2" FillMode="Forward">
        <!--set init value otherwise it does not work-->
        <KeyFrame Cue="0%">
          <!--Setting over a property does not work right now-->
          <Setter Property="Width" Value="{Binding $self.MinimizedSize}"/>
        </KeyFrame>
        <KeyFrame Cue="100%">
          <!--Setting over a property does not work right now-->
          <Setter Property="Width" Value="{Binding $self.MaximizedSize}"/>
        </KeyFrame>
      </Animation>
    </Style.Animations>
  </Style>

  <Style Selector="Controls|HamburgerMenu[IsOpen=false]">
    <Style.Animations>
      <Animation Duration="0:0:0.2"
                 FillMode="Forward">
        <!--set init value otherwise it does not work-->
        <KeyFrame Cue="0%">
          <!--Setting over a property does not work right now-->
          <Setter Property="Width" Value="{Binding $self.MaximizedSize}"/>
        </KeyFrame>
        <KeyFrame Cue="100%">
          <!--Setting over a property does not work right now-->
          <Setter Property="Width" Value="{Binding $self.MinimizedSize}"/>
        </KeyFrame>
      </Animation>
    </Style.Animations>
  </Style>
</Styles>
